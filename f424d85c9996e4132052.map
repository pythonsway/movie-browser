{"version":3,"sources":["F:/my_projects/cs50React/project2/_bare_template/movie-browser/assets/defaultImage.jpg","F:/my_projects/cs50React/project2/_bare_template/movie-browser/api/api.js","F:/my_projects/cs50React/project2/_bare_template/movie-browser/redux/actions.js","F:/my_projects/cs50React/project2/_bare_template/movie-browser/components/Row.js","F:/my_projects/cs50React/project2/_bare_template/movie-browser/components/FlatListMovies.js","F:/my_projects/cs50React/project2/_bare_template/movie-browser/components/SearchForm.js","F:/my_projects/cs50React/project2/_bare_template/movie-browser/screens/HomeScreen.js","F:/my_projects/cs50React/project2/_bare_template/movie-browser/components/DetailsRow.js","F:/my_projects/cs50React/project2/_bare_template/movie-browser/components/ShareButton.js","F:/my_projects/cs50React/project2/_bare_template/movie-browser/screens/DetailsScreen.js","F:/my_projects/cs50React/project2/_bare_template/movie-browser/screens/InfoScreen.js","F:/my_projects/cs50React/project2/_bare_template/movie-browser/navigation/AppNavigator.js","F:/my_projects/cs50React/project2/_bare_template/movie-browser/redux/reducer.js","F:/my_projects/cs50React/project2/_bare_template/movie-browser/redux/store.js","F:/my_projects/cs50React/project2/_bare_template/movie-browser/App.js","F:/my_projects/cs50React/project2/_bare_template/movie-browser/web-build/register-service-worker.js"],"names":["module","exports","fetchMovies","title","page","a","async","SearchString","replace","toLowerCase","ReqUrl","fetch","response","json","movies","fetchMovieDetails","movieID","movieDetails","updateMovies","dispatch","type","Response","payload","Row","props","TouchableOpacity","style","styles","row","onPress","onSelectMovie","Image","image","source","Poster","require","uri","View","Text","Title","Year","StyleSheet","create","flex","flexDirection","paddingVertical","width","height","marginRight","propTypes","PropTypes","string","keyExtractor","item","index","toString","renderSeparator","separator","FlatListMovies","container","FlatList","renderItem","data","ItemSeparatorComponent","ListFooterComponent","footer","ActivityIndicator","size","animating","loading","length","totalResults","onEndReached","onLoadMore","onEndReachedThreshold","flexBasis","Dimensions","get","backgroundColor","borderTopWidth","borderColor","array","SearchForm","state","isFormValid","handleTitleChange","setState","validateForm","trim","handleSubmit","onSubmit","prevProps","prevState","this","KeyboardAvoidingView","behavior","TextInput","autoFocus","input","value","onChangeText","placeholder","autoCapitalize","clearButtonMode","Button","disabled","React","Component","padding","borderWidth","minWidth","marginHorizontal","paddingHorizontal","borderRadius","margin","fontSize","HomeScreen","formTitle","Keyboard","dismiss","updateTitle","handleLoadMore","updatePage","handleSelectMovie","movie","imdbID","navigation","push","heading","error","results","info","resultsList","navigationOptions","headerTitle","headerRight","Ionicons","icon","navigate","name","color","alignItems","marginTop","fontStyle","fontWeight","textAlign","mapDispatchToProps","newTitle","getState","connect","DetailsRow","detail","ShareButton","onShare","Share","share","message","year","dialogTitle","subject","result","action","sharedAction","activityType","dismissedAction","alert","DetailsScreen","params","ScrollView","contentContainerStyle","scroll","textTitle","getParam","resizeMode","rows","map","key","flexGrow","justifyContent","Platform","select","web","marginBottom","alignSelf","InfoScreen","text","link","Linking","openURL","goBack","textDecorationLine","MainStack","createStackNavigator","Home","screen","Details","initialRouteName","defaultNavigationOptions","headerStyle","headerTitleStyle","RootStack","Main","InfoModal","mode","headerMode","transparentCard","cardStyle","opacity","createAppContainer","initialState","undefined","reducer","combineReducers","Search","JSON","parse","Error","persistConfig","storage","OS","localforage","ExpoFileSystemStorage","persistedReducer","persistReducer","store","createStore","applyMiddleware","thunk","persistor","persistStore","App","navigator","window","addEventListener","serviceWorker","register","scope","then","catch","console"],"mappings":"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","file":"static/js/app.d396077b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/defaultImage.24326c9d.jpg\";","export const fetchMovies = async (title, page) => {\r\n  const SearchString = title.replace(/\\s/g, '+').toLowerCase();\r\n  // Browser cannot access local or server .env,\r\n  // in production use server-side API for secrets\r\n  const ReqUrl = `https://omdbapi.com/?apikey=41e9e2dd&s=${SearchString}&page=${page}`;\r\n  const response = await fetch(ReqUrl);\r\n  const movies = await response.json();\r\n  return movies;\r\n};\r\n\r\nexport const fetchMovieDetails = async (movieID) => {\r\n  const ReqUrl = `https://omdbapi.com/?apikey=41e9e2dd&i=${movieID}&plot=full`;\r\n  const response = await fetch(ReqUrl);\r\n  const movieDetails = await response.json();\r\n  return movieDetails;\r\n};\r\n","import { fetchMovies } from '../api/api';\n\n\n// action types\nexport const UPDATE_TITLE = 'UPDATE_TITLE';\nexport const UPDATE_PAGE = 'UPDATE_PAGE';\nexport const REQUEST_SENT = 'REQUEST_SENT';\nexport const FETCH_TRUE = 'FETCH_TRUE';\nexport const FETCH_FALSE = 'FETCH_FALSE';\nexport const FETCH_ERROR = 'FETCH_ERROR';\n\n// action creators\nexport const updateTitle = newTitle => {\n  return (dispatch, getState) => {\n    dispatch({\n      type: UPDATE_TITLE,\n      payload: newTitle,\n    });\n    const { title, page, loading } = getState().movies;\n    dispatch(updateMovies(title, page));\n  }\n};\n\nexport const updatePage = () => {\n  return (dispatch, getState) => {\n    dispatch({\n      type: UPDATE_PAGE,\n    });\n    const { title, page } = getState().movies;\n    dispatch(updateMovies(title, page));\n  }\n};\n\n// async action creatorS\nexport const updateMovies = (title, page) => async dispatch => {\n  dispatch({ type: REQUEST_SENT });\n  try {\n    const movies = await fetchMovies(title, page);\n    // if (JSON.parse(movies.Response))\n    if (movies.Response === 'True') {\n      dispatch({ type: FETCH_TRUE, payload: movies });\n    } else {\n      dispatch({ type: FETCH_FALSE, payload: movies });\n    }\n  } catch (err) {\n    dispatch({ type: FETCH_ERROR, payload: err });\n  }\n};\n","import React from 'react';\r\nimport { Image, StyleSheet, Text, TouchableOpacity, View } from 'react-native';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst Row = props => (\r\n  <TouchableOpacity style={styles.row} onPress={() => props.onSelectMovie(props)}>\r\n    <Image\r\n      style={styles.image}\r\n      source={(props.Poster == 'N/A') ? require('../assets/defaultImage.jpg') : { uri: props.Poster }}\r\n    />\r\n    <View style={styles.title}>\r\n      <Text>{props.Title}</Text>\r\n      <Text>{`(${props.Year})`}</Text>\r\n    </View>\r\n  </TouchableOpacity>\r\n);\r\n\r\nconst styles = StyleSheet.create({\r\n  row: {\r\n    flex: 1,\r\n    flexDirection: 'row',\r\n    // alignContent: 'center',\r\n    paddingVertical: 10,\r\n    // borderWidth: 1,\r\n    // borderColor: '#696969',\r\n  },\r\n  image: {\r\n    width: 34,\r\n    height: 50,\r\n    marginRight: 10\r\n  },\r\n  title: {\r\n    flex: 1\r\n  }\r\n});\r\n\r\nRow.propTypes = {\r\n  Title: PropTypes.string,\r\n  Year: PropTypes.string,\r\n  Poster: PropTypes.string,\r\n};\r\n\r\nexport default Row;","import React from 'react';\r\nimport { ActivityIndicator, Dimensions, FlatList, StyleSheet, Text, View } from 'react-native';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Row from './Row';\r\n\r\n// obj.item from 'FlatList' API\r\nconst keyExtractor = (item, index) => index.toString();\r\n\r\nconst renderSeparator = () => <View style={styles.separator} />;\r\n\r\n\r\nconst FlatListMovies = props => {\r\n  // inside component in order to access props in 'Row'\r\n  const renderItem = ({ item }) => <Row {...item} onSelectMovie={props.onSelectMovie} />;\r\n  const renderFooter = () => {\r\n    return (\r\n      <View style={styles.footer}>\r\n        <ActivityIndicator\r\n          size=\"large\"\r\n          animating={props.loading ? true : false}\r\n        />\r\n        {(props.movies.length == props.totalResults) && (\r\n          <Text>No more results</Text>\r\n        )}\r\n\r\n      </View>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <FlatList\r\n        renderItem={renderItem}\r\n        data={props.movies}\r\n        // keyExtractor={item => item.imdbID} />\r\n        keyExtractor={keyExtractor}\r\n        ItemSeparatorComponent={renderSeparator}\r\n        ListFooterComponent={renderFooter}\r\n        onEndReached={props.onLoadMore}\r\n        onEndReachedThreshold={0.5}\r\n      />\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flexBasis: (Dimensions.get('window').height / 2),\r\n    width: (Dimensions.get('window').width * 0.95)\r\n  },\r\n  separator: {\r\n    height: 2,\r\n    backgroundColor: \"#CED0CE\",\r\n    // width: \"95%\",\r\n    // marginLeft: \"5%\"\r\n  },\r\n  footer: {\r\n    paddingVertical: 20,\r\n    borderTopWidth: 2,\r\n    borderColor: \"#CED0CE\"\r\n  }\r\n});\r\n\r\nFlatListMovies.propTypes = {\r\n  movies: PropTypes.array,\r\n};\r\n\r\nexport default FlatListMovies;\r\n\r\n","import React from 'react';\nimport { Button, KeyboardAvoidingView, StyleSheet, TextInput } from 'react-native';\n\n\nexport default class SearchForm extends React.Component {\n  // Shorthand for:\n  // constructor(props) {\n  //   super(props);\n  //   this.state = {\n  //   }\n  // During compilation also moves other class propeties, like:\n  // this.someThing = () => \n  state = {\n    title: '',\n    isFormValid: false,\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.title !== prevState.title) {\n      this.validateForm();\n    }\n  };\n\n  handleTitleChange = title => {\n    this.setState({\n      title\n    });\n  };\n\n  validateForm = () => {\n    const title = this.state.title.trim();\n    this.setState({\n      isFormValid: (title.length > 2) ? true : false\n    });\n  }\n\n  handleSubmit = () => {\n    this.props.onSubmit(this.state.title);\n  }\n\n  render() {\n    return (\n      <KeyboardAvoidingView behavior=\"padding\" style={styles.container}>\n        <TextInput\n          autoFocus={true}\n          style={styles.input}\n          value={this.state.title}\n          onChangeText={this.handleTitleChange}\n          placeholder=\"Movie title\"\n          autoCapitalize=\"none\"\n          clearButtonMode=\"always\"\n        />\n        <Button title=\"Search\" onPress={this.handleSubmit} disabled={!this.state.isFormValid} />\n      </KeyboardAvoidingView>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    // flex: 1,\n    padding: 10,\n  },\n  input: {\n    height: 50,\n    borderWidth: 3,\n    borderColor: 'orange',\n    minWidth: 200,\n    marginHorizontal: 20,\n    paddingHorizontal: 10,\n    paddingVertical: 5,\n    borderRadius: 4,\n    margin: 10,\n    fontSize: 20\n  },\n})\n","import React from 'react';\r\nimport { Keyboard, Platform, StyleSheet, Text, View } from 'react-native';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { fetchMovieDetails } from '../api/api';\r\nimport { updateTitle, updateMovies, updatePage } from '../redux/actions';\r\nimport FlatListMovies from '../components/FlatListMovies';\r\nimport SearchForm from '../components/SearchForm';\r\n\r\n\r\nclass HomeScreen extends React.Component {\r\n  static navigationOptions = ({ navigation }) => {\r\n    // 'navigation.getParam' or 'navigation.state.params'\r\n    // const params = navigation.state.params || {};\r\n    return {\r\n      // 'headerTitle'- property specific to a stack navigator, defaults to a '<Text>' component that displays the 'title'\r\n      headerTitle: 'Movie Browser',\r\n      headerRight: (\r\n        <Ionicons\r\n          style={styles.icon}\r\n          onPress={() => navigation.navigate('InfoModal')}\r\n          name=\"ios-information-circle-outline\"\r\n          size={24}\r\n          color=\"black\"\r\n        />\r\n      ),\r\n    };\r\n  };\r\n\r\n  handleSubmit = (formTitle) => {\r\n    Keyboard.dismiss();\r\n    this.props.updateTitle(formTitle);\r\n  }\r\n\r\n  handleLoadMore = () => {\r\n    if (this.props.totalResults > 10) {\r\n      this.props.updatePage();\r\n    }\r\n  }\r\n\r\n  handleSelectMovie = async movie => {\r\n    const movieDetails = await fetchMovieDetails(movie.imdbID);\r\n    this.props.navigation.push('Details', movieDetails);\r\n    // debugger;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <View style={styles.container}>\r\n        <View>\r\n          <Text style={styles.heading}>Search for movies</Text>\r\n          <SearchForm\r\n            onSubmit={this.handleSubmit}\r\n          />\r\n          {this.props.error && (\r\n            <Text style={styles.error}>{`\"${this.props.title}\": ${this.props.error}`}</Text>\r\n          )}\r\n        </View>\r\n        {(this.props.totalResults > 0) && (\r\n          <View style={styles.results}>\r\n            <Text style={styles.info}>{`Found ${this.props.totalResults} results for \"${this.props.title}\":`}</Text>\r\n            <FlatListMovies\r\n              style={styles.resultsList}\r\n              movies={this.props.movies}\r\n              totalResults={this.props.totalResults}\r\n              loading={this.props.loading}\r\n              onSelectMovie={this.handleSelectMovie}\r\n              onLoadMore={this.handleLoadMore}\r\n            />\r\n          </View>\r\n        )}\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    padding: 10,\r\n    alignItems: 'center',\r\n  },\r\n  heading: {\r\n    marginTop: 10,\r\n    fontStyle: 'italic',\r\n    fontSize: 36,\r\n    fontWeight: 'bold'\r\n  },\r\n  results: {\r\n    flex: 1,\r\n\r\n  },\r\n  resultsList: {\r\n    flex: 1,\r\n    marginTop: 10,\r\n  },\r\n  error: {\r\n    margin: 5,\r\n    fontSize: 16,\r\n    textAlign: 'center',\r\n    color: 'red'\r\n  },\r\n  info: {\r\n    margin: 5,\r\n    fontSize: 24,\r\n    fontWeight: 'bold'\r\n  },\r\n  icon: {\r\n    marginRight: 20\r\n  }\r\n});\r\n\r\nconst mapStateToProps = state => ({\r\n  title: state.movies.title,\r\n  page: state.movies.page,\r\n  movies: state.movies.movies,\r\n  totalResults: state.movies.totalResults,\r\n  loading: state.movies.loading,\r\n  error: state.movies.error,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  updateTitle,\r\n  updateMovies,\r\n  updatePage,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HomeScreen);","import React from 'react';\r\nimport { StyleSheet, Text, View } from 'react-native';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst DetailsRow = props => (\r\n  <View style={styles.container}>\r\n    <Text style={styles.heading}>{`${props.heading}: `}</Text>\r\n    <Text style={styles.detail}>{props.detail}</Text>\r\n  </View>\r\n);\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    flexDirection: 'row',\r\n    // alignContent: 'center',\r\n    paddingVertical: 10,\r\n    marginHorizontal: 10,\r\n    // borderWidth: 1,\r\n    // borderColor: '#696969',\r\n  },\r\n  heading: {\r\n    fontWeight: 'bold'\r\n  },\r\n  detail: {\r\n    flex: 1,    \r\n    textAlign: 'justify'\r\n  }\r\n});\r\n\r\nDetailsRow.propTypes = {\r\n  heading: PropTypes.string,\r\n  detail: PropTypes.string,\r\n};\r\n\r\nexport default DetailsRow;","import React from 'react';\r\nimport { Share, StyleSheet } from 'react-native';\r\nimport { Ionicons } from '@expo/vector-icons';\r\n\r\n\r\nclass ShareButton extends React.Component {\r\n  onShare = async () => {\r\n    try {\r\n      const result = await Share.share({\r\n        message: `${this.props.title} (${this.props.year})`,\r\n        title: 'Check out this movie'\r\n      }, {\r\n        // Android only:\r\n        dialogTitle: 'Share movie title',\r\n        // iOS only (via email):\r\n        subject: 'Check out this movie'\r\n      });\r\n\r\n      if (result.action === Share.sharedAction) {\r\n        if (result.activityType) {\r\n          // shared with activity type of result.activityType\r\n        } else {\r\n          // shared\r\n        }\r\n      } else if (result.action === Share.dismissedAction) {\r\n        // dismissed\r\n      }\r\n    } catch (error) {\r\n      alert(error.message);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Ionicons\r\n        style={styles.icon}\r\n        onPress={this.onShare}\r\n        name=\"ios-share-alt\"\r\n        size={24}\r\n        color=\"black\"\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  icon: {\r\n    marginRight: 20\r\n  },\r\n});\r\n\r\nexport default ShareButton;","import React from 'react';\r\nimport { Dimensions, Image, Platform, ScrollView, StyleSheet, Text, View } from 'react-native';\r\n\r\nimport DetailsRow from '../components/DetailsRow';\r\nimport ShareButton from '../components/ShareButton';\r\n\r\n\r\nexport default class DetailsScreen extends React.Component {\r\n  static navigationOptions = ({ navigation, navigationOptions }) => {\r\n    // const { params } = navigation.state;\r\n\r\n    return {\r\n      // headerTitle: params ? params.Title : 'Movie details',\r\n      headerTitle: `\"${navigation.getParam('Title')}\"`,\r\n      headerRight: () => (\r\n        <ShareButton\r\n          title={navigation.getParam('Title')}\r\n          year={navigation.getParam('Year')}\r\n        />\r\n      ),\r\n    };\r\n  };\r\n\r\n  render() {\r\n    const rowsList = [\r\n      'Year',\r\n      'Rated',\r\n      'Released',\r\n      'DVD',\r\n      'Runtime',\r\n      'Type',\r\n      'Genre',\r\n      'Director',\r\n      'Writer',\r\n      'Actors',\r\n      'Plot',\r\n      'Language',\r\n      'Country',\r\n      'Awards',\r\n      'Metascore',\r\n      'imdbRating',\r\n      'imdbVotes',\r\n      'BoxOffice',\r\n      'Production',\r\n      'Website'\r\n    ];\r\n    // Read the params from the navigation state\r\n    const { params } = this.props.navigation.state;\r\n\r\n    return (\r\n      <View style={styles.container} >\r\n        <ScrollView contentContainerStyle={styles.scroll} >\r\n          <Text style={styles.textTitle}>\r\n            {this.props.navigation.getParam('Title')}\r\n          </Text>\r\n          <Image\r\n            style={styles.image}\r\n            source={(this.props.navigation.getParam('Poster') == 'N/A') ? require('../assets/defaultImage.jpg') : { uri: this.props.navigation.getParam('Poster') }}\r\n            resizeMode='contain'\r\n          />\r\n          <View style={styles.rows}>\r\n            {rowsList.map((row, key) => (\r\n              <DetailsRow\r\n                key={key}\r\n                heading={row}\r\n                detail={params[row]} />\r\n            ))}\r\n          </View>\r\n        </ScrollView >\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    // flex: 1,\r\n    flexGrow: 1,\r\n    justifyContent: 'space-around',\r\n    // flexBasis: (Dimensions.get('window').height),\r\n    ...Platform.select({\r\n      web: {\r\n        flexBasis: (Dimensions.get('window').height * 0.9),\r\n      },\r\n    }),\r\n  },\r\n  scroll: {\r\n    flexGrow: 1,\r\n    padding: 10,\r\n    marginBottom: 50,\r\n  },\r\n  image: {\r\n    width: 300,\r\n    height: 444,\r\n    margin: 20,\r\n    alignSelf: 'center',\r\n  },\r\n  textTitle: {\r\n    fontSize: 26,\r\n    fontWeight: 'bold',\r\n    alignSelf: 'center',\r\n  },\r\n  rows: {\r\n    flex: 1,\r\n  }\r\n});","import React from 'react';\r\nimport { Button, Linking, StyleSheet, Text, View } from 'react-native';\r\n\r\n\r\nexport default class InfoScreen extends React.Component {\r\n  render() {\r\n    return (\r\n      <View style={styles.container}>\r\n        <Text style={styles.text}>by Python's way</Text>\r\n        <Text style={styles.link}\r\n          onPress={() => Linking.openURL('https://pythonsway.it/')}>\r\n          https://pythonsway.it\r\n        </Text>\r\n        <Button\r\n          onPress={() => this.props.navigation.goBack()}\r\n          title=\"Go back\"\r\n        />\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    padding: 10,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    backgroundColor: 'rgba(255, 165, 0, 0.9)'\r\n  },\r\n  text: {\r\n    margin: 10,\r\n    fontSize: 36,\r\n  },\r\n  link: {\r\n    marginBottom: 60,\r\n    fontSize: 24,\r\n    textDecorationLine: 'underline',\r\n    color: 'navy'\r\n  }\r\n});","import React from 'react';\r\nimport { Platform } from 'react-native';\r\nimport { createAppContainer } from 'react-navigation';\r\nimport { createStackNavigator } from 'react-navigation-stack';\r\n\r\nimport HomeScreen from '../screens/HomeScreen';\r\nimport DetailsScreen from '../screens/DetailsScreen';\r\nimport InfoScreen from '../screens/InfoScreen';\r\n\r\n\r\nconst MainStack = createStackNavigator(\r\n  {\r\n    Home: {\r\n      screen: HomeScreen,\r\n    },\r\n    Details: {\r\n      screen: DetailsScreen,\r\n    },\r\n  },\r\n  {\r\n    initialRouteName: 'Home',\r\n    defaultNavigationOptions: {\r\n      headerStyle: {\r\n        backgroundColor: 'orange',\r\n      },\r\n      headerTitleStyle: {\r\n        fontWeight: 'bold',\r\n      },\r\n    },\r\n  }\r\n);\r\n\r\nconst RootStack = createStackNavigator(\r\n  {\r\n    Main: {\r\n      screen: MainStack,\r\n    },\r\n    InfoModal: {\r\n      screen: InfoScreen,\r\n    },\r\n  },\r\n  {\r\n    mode: 'modal',\r\n    headerMode: 'none',\r\n    transparentCard: true,\r\n    cardStyle: {\r\n      backgroundColor: \"transparent\",\r\n      opacity: 1\r\n    },\r\n  }\r\n);\r\n\r\nexport default createAppContainer(RootStack);\r\n","import { combineReducers } from 'redux';\n\nimport { FETCH_ERROR, FETCH_FALSE, FETCH_TRUE, UPDATE_PAGE, REQUEST_SENT, UPDATE_TITLE } from './actions';\n\n\n// if object spread not supported in Node:\n// const merge = (prev, next) => Object.assign({}, prev, next);\n//    merge(state, action.payload);\n\nconst initialState = {\n  title: '',\n  page: 1,\n  movies: [],\n  totalResults: 0,\n  loading: false,\n  error: undefined,\n};\n\nconst moviesReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case UPDATE_TITLE:\n      return {\n        ...state,\n        page: 1,\n        movies: [],\n        title: action.payload\n      };\n    case UPDATE_PAGE:\n      return {\n        ...state,\n        page: state.page + 1,\n      };\n    case REQUEST_SENT:\n      return {\n        ...state,\n        loading: true,\n      };\n    case FETCH_TRUE:\n      return {\n        ...state,\n        movies: [...state.movies, ...action.payload.Search],\n        totalResults: JSON.parse(action.payload.totalResults),\n        loading: false,\n        error: undefined\n      };\n    case FETCH_FALSE:\n      if (state.page > 1) {\n        return {\n          ...state,\n          loading: false,\n          // error: 'No more results'\n        };\n      } else {\n        return {\n          ...state,\n          page: 1,\n          movies: [],\n          totalResults: 0,\n          loading: false,\n          error: action.payload.Error\n        };\n      }\n    case FETCH_ERROR:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload\n      };\n    default:\n      return state;\n  }\n};\n\n// for future split of reducers\nconst reducer = combineReducers({\n  movies: moviesReducer,\n});\n\nexport default reducer;\n","import React from 'react';\nimport { Platform } from 'react-native';\nimport { applyMiddleware, createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport { persistReducer, persistStore } from 'redux-persist';\nimport ExpoFileSystemStorage from 'redux-persist-expo-filesystem';\nimport localforage from 'localforage';\n\nimport reducer from './reducer';\n\nconst persistConfig = {\n    key: \"root\",\n    storage: (Platform.OS === 'web') ? localforage : ExpoFileSystemStorage\n};\n\nconst persistedReducer = persistReducer(persistConfig, reducer);\n\nexport const store = createStore(persistedReducer, applyMiddleware(thunk));\nexport const persistor = persistStore(store);\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nimport AppContainer from './navigation/AppNavigator.js';\nimport { persistor, store } from './redux/store';\n\n\nexport default class App extends React.Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <PersistGate loading={null} persistor={persistor}>\n          <AppContainer />\n        </PersistGate>\n      </Provider>\n    );\n  }\n}\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function() {\n    navigator.serviceWorker\n      .register('/expo-service-worker.js', { scope: '/' })\n      .then(function(info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function(error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n"],"sourceRoot":""}